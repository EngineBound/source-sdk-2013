//-----------------------------------------------------------------------------
//	shaderapidx11.vpc
//
//	Project Script for DirectX11 shader API.
//-----------------------------------------------------------------------------

$Macro SRCDIR		"..\.."
$Macro OUTBINDIR	"$SRCDIR\..\game\bin"
$Macro OUTBINNAME	"shaderapidx11"
$Macro GAMENAME     "enginebound"

$Include "$SRCDIR\vpc_scripts\source_dll_base.vpc"

$Configuration
{
    $General
	{
		$PlatformToolset "v120" // Minimum requirement for DX11
	}

	$Compiler
	{
		$AdditionalIncludeDirectories		"$BASE;..\..\public\shaderapi"
        $PreprocessorDefinitions		"$BASE;DX11;SHADERAPIDX11;SHADER_DLL_EXPORT;strncpy=use_Q_strncpy_instead;_snprintf=use_Q_snprintf_instead"
//		$PreprocessorDefinitions		"$BASE;USE_ACTUAL_DX" [($WIN32||$X360) && !$GL]
//		$PreprocessorDefinitions		"$BASE;GL_GLEXT_PROTOTYPES;DX_TO_GL_ABSTRACTION" [$GL]
	}
    
    $Linker
	{
		$AdditionalDependencies				"$BASE d3d11.lib dxgi.lib dxguid.lib D3DCompiler.lib"
	}
}

$Project "ShaderApiDX11 (EngineBound)"
{
	$Folder "Source Files"
	{
        $File	"dx11global.h"
        $File	"statesdx11.h"
        
        $File   "hardwareconfigdx11.h"
        $File   "hardwareconfigdx11.cpp"
        
        $File   "ishaderapidx11.h"
        $File   "shaderapidx11.h"
        $File   "shaderapidx11.cpp"
        
        $File   "ishaderdevicedx11.h"
        $File   "shaderdevicedx11.h"
        $File   "shaderdevicedx11.cpp"
        
        $File   "ishaderdevicemgrdx11.h"
        $File   "shaderdevicemgrdx11.h"
        $File   "shaderdevicemgrdx11.cpp"
        
        $File   "ishadershadowdx11.h"
        $File   "shadershadowdx11.h"
        $File   "shadershadowdx11.cpp"
        
        $File   "imeshdx11.h"
        $File   "meshdx11.h"
        $File   "meshdx11.cpp"
        
        $File   "imaterialdx11.h"
        $File   "materialdx11.h"
        $File   "materialdx11.cpp"
        
        $File   "apitexturedx11.h"
        $File   "apitexturedx11.cpp"
        
	}
}